{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Section/Section.module.css","components/PageTitle/PageTitle.module.css","components/Title/Title.module.css","components/Filter/Filter.module.css","redux/phonebook-actions.js","redux/phonebook-reducers.js","redux/store.js","components/Section/Section.js","components/PageTitle/PageTitle.js","components/Title/Title.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","deleteContact","updateFilter","items","createReducer","state","payload","filter","contact","id","_","phonebookReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","devTools","process","persistor","persistStore","Section","children","className","styles","container","PageTitle","title","defaultProps","Title","ContactForm","name","number","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","uuidv4","existingContact","props","find","alert","newContact","submitHandler","reset","form","onSubmit","this","type","onChange","required","btn","Component","connect","dispatch","Filter","filterValue","filterUpdate","autoComplete","target","filtered","toLowerCase","includes","toLocaleLowerCase","onDeleteContact","contactId","length","map","item","onClick","notification","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3aeb9db7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form___A5Sl\",\"btn\":\"ContactForm_btn__OstSP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3GCct\",\"title\":\"Section_title__Kh-yg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageTitle_title__2p2RN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__M6SFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2SlGE\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('phonebook/add');\nexport const deleteContact = createAction('phonebook/delete');\nexport const updateFilter = createAction('phonebook/updateFilter');\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, updateFilter } from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [payload, ...state],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [updateFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const phonebookReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","// Imports from Redux Toolkit\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// Imports from Redux Persist\nimport storage from 'redux-persist/lib/storage';\n// Redux Persist fix\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n// Imports of middleware\nimport logger from 'redux-logger';\n// Imports of reducers\nimport { phonebookReducer } from './phonebook-reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst phonebookPersistConfig = {\n  key: 'phonebook',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(phonebookPersistConfig, phonebookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Section.module.css';\n\nconst Section = ({ children }) => {\n  return (\n    <section>\n      <div className={styles.container}>{children}</div>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './PageTitle.module.css';\n\nconst PageTitle = ({ title }) => {\n  return title && <h1 className={styles.title}>{title}</h1>;\n};\n\nPageTitle.defaultProps = {\n  title: '',\n};\n\nPageTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default PageTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Title.module.css';\n\nconst Title = ({ title }) => {\n  return title && <h2 className={styles.title}>{title}</h2>;\n};\n\nTitle.defaultProps = {\n  title: '',\n};\n\nTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Title;\n","// Imports from React\nimport React, { Component } from 'react';\n// Helpers imports\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n// Imports from Redux\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/phonebook-actions';\n// Styles imports\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = { name: '', number: '' };\n\n  static propTypes = {\n    submitHandler: PropTypes.func.isRequired,\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const id = uuidv4();\n    const { name, number } = this.state;\n\n    if (!name) {\n      return;\n    }\n\n    const existingContact = this.props.state.contacts.items.find(\n      contact => contact.name === name,\n    );\n\n    if (existingContact) {\n      alert(`${existingContact.name} is already in contacts.`);\n      return;\n    }\n\n    const newContact = { id, name, number };\n\n    this.props.submitHandler(newContact);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"name\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleInputChange}\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleInputChange}\n            required\n          />\n        </label>\n        <button type=\"submit\" className={styles.btn}>\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  state,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  submitHandler: contact => dispatch(addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateFilter } from '../../redux/phonebook-actions';\n\nimport styles from './Filter.module.css';\n\nconst Filter = ({ filterValue, filterUpdate }) => {\n  return (\n    <div className={styles.filter}>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filterValue}\n          onChange={filterUpdate}\n          autoComplete=\"off\"\n          required\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.defaultProps = {\n  filterValue: '',\n};\n\nFilter.propTypes = {\n  filterValue: PropTypes.string,\n  filterUpdate: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filterValue: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  filterUpdate: event => dispatch(updateFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook-actions';\n\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ filtered, onDeleteContact }) => {\n  return (\n    <ul className={styles.contacts}>\n      {filtered.length ? (\n        filtered.map(contact => (\n          <li key={contact.id} className={styles.item}>\n            <div>\n              <p>{contact.name}:</p>\n              <p>{contact.number}</p>\n            </div>\n\n            <button\n              className={styles.btn}\n              onClick={() => {\n                onDeleteContact(contact.id);\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        ))\n      ) : (\n        <li className={styles.notification}>No contact found.</li>\n      )}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filtered: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => {\n  const filtered = state.contacts.items.filter(\n    ({ name, number }) =>\n      name.toLowerCase().includes(state.contacts.filter.toLocaleLowerCase()) ||\n      number.includes(state.contacts.filter),\n  );\n  return {\n    filtered,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: contactId => dispatch(deleteContact(contactId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","// Imports from React\nimport React from 'react';\n// Imports of components\nimport Section from './components/Section';\nimport PageTitle from './components/PageTitle';\nimport Title from './components/Title';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nconst App = () => {\n  return (\n    <>\n      <PageTitle title=\"Phone Book\" />\n      <Section>\n        <Title title=\"Add contacts\" />\n        <ContactForm />\n        <Title title=\"Сontacts\" />\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","// Imports from React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// Imports from Redux\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\n//Imports from Redux Persist\nimport { PersistGate } from 'redux-persist/integration/react';\n// Imports of components\nimport App from './App';\n// Styles imports\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading=\"Loading...\" persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1MhiF\",\"item\":\"ContactList_item__3BAxP\",\"btn\":\"ContactList_btn__iASNk\",\"notification\":\"ContactList_notification__2bp0Y\"};"],"sourceRoot":""}